@page "/"
@using System.Threading.Tasks
@using cryptovalutchik.Components.Blocks;
@using cryptovalutchik.Components.Types;
@inject HttpClient client;
<PageTitle>Cryptovalutchik</PageTitle>
<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Crypto Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <link rel="stylesheet" href="../Components/Pages/Home.razor.css" />
</head>

<body>
    <div class="container">
        <TickerFilter Tickers="tickers" OnAddTicker="OnAddTicker"/>
        <CryptoList Cryptocurrencies="cryptocurrencies"/>
        <ChartList Cryptocurrencies="cryptocurrencies"/>
    </div>
</body>
</html>

@code{
	private string[] tickers=[];
	private List<string> userTicker = [];
	private Cryptocurrency[] cryptocurrencies=[];
	private Timer? _timer;
	protected override async Task OnInitializedAsync()
	{
		tickers = await client.GetFromJsonAsync<string[]>("/cryptocurrency/tickers");
		_timer = new Timer(async _ => await RefreshDataAsync(), null, TimeSpan.Zero, TimeSpan.FromSeconds(3));
	}
	private async Task OnAddTicker(string ticker)
	{
		userTicker.Add(ticker);
		string query = "?";
		foreach(var userTicker in userTicker)
		{
			query += $"tickers={userTicker}&";
		}
		cryptocurrencies = await client.GetFromJsonAsync<Cryptocurrency[]>($"/cryptocurrency{query}");
	}
	private async Task RefreshDataAsync()
	{
		await InvokeAsync(StateHasChanged);
		Console.Write("Обновление...");
	}
}